<?php
namespace SCC\Console\Command;
use \SCC\Console\ConsoleCommandFactory;
/**
 * Добавляет новую команду
 */
class AddCommand implements \SCC\Console\ConsoleCommand {
	/**
	 * {@inheritdoc}
	 */
	function onCommand(array $params): void {

		if (isset($params[0])) {
			$cmdAlias = $params[0];
		} else {
			echo "Введите псевданим команды: ";
			$cmdAlias = fgets(STDIN);
			if (substr($cmdAlias, -1) === "\n")
				$cmdAlias = substr($cmdAlias, 0, -1);
		}

		$dirname = dirname($cmdAlias);
		if ($dirname !== ".")
			ConsoleCommandFactory::createPackage($dirname);
		$factory = new ConsoleCommandFactory([ $cmdAlias ]);

		if ($factory->exists()) {
			echo "Данная команда уже существует\n";
			return;
		}

		if (isset($params[1])) {
			$source = $params[1];
		} else {
			echo "Введите путь к классу команды: ";
			$source = fgets(STDIN);
			if (substr($source, -1) === "\n") {
				$source = substr($source, 0, -1);
			}
		}

		$pathArr = \SCC\url_inner_class($source);
		$path = ROOT."/".$pathArr["path"];
		$class = &$pathArr["class"];

		if (!file_exists($path)) {
			echo "Файл не существует. Создать новый? (Y/n): ";
			$result = fgets(STDIN);
			if (substr($result, -1) === "\n")
				$result = strtolower(substr($result, 0, -1));

			switch ($result) {
				case "n":
				case "no":
				case "н";
				case "нет":
					return;

				default:
					$indNamespace = strripos($class,"\\",-1);
					$className = substr($class,$indNamespace+1);

					$firstSymbol = 0;
					if (substr($class,0,1) === "\\") {
						$firstSymbol = 1;
					}
					$namespace = substr($class,$firstSymbol,$indNamespace-1);
					unset($firstSymbol);

					$dirPath =  dirname($path);
					if (!file_exists($dirPath)) {
						mkdir($dirPath,0777,true);
					}

					$classContent = "<?php\nnamespace ".$namespace.";\n/**\n * New autogenerated command\n */\nclass ".$className." implements \SCC\Console\ConsoleCommand {\n\t/**\n\t * {@inheritdoc}\n\t */\n\tfunction onCommand(array \$params): void {\n\t\t// TODO: Here your command code\n\t}\n}\n";
					file_put_contents($path,$classContent);
			}
		}

		// Проверяем существование класса
		require_once($path);
		if (!class_exists($class)) { 
			echo "Класс не существует.\n";
			return;
		}

		// Сохраняем конфигурацию
		$factory->getState()
			->set("path",$source)
			->save();

	}
}